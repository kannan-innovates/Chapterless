<%- include("../partials/user/header") %>

<!-- Shop Header -->
<section class="py-5 bg-light">
  <div class="container">
    <div class="row align-items-center">
      <div class="col-lg-6">
        <h1 class="display-5 fw-bold mb-3">Shop Our Collection</h1>
        <p class="text-muted mb-0">Curated books that will find their way to your soul.</p>
      </div>
      <div class="col-lg-6">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb justify-content-lg-end mb-0">
            <li class="breadcrumb-item"><a href="/" class="text-decoration-none text-muted">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">Shop</li>
          </ol>
        </nav>
      </div>
    </div>
  </div>
</section>

<!-- Shop Content -->
<section class="py-5 bg-white">
  <div class="container">
    <div class="row g-4">
      <!-- Filters Sidebar -->
      <div class="col-lg-3">
        <div class="filters-container p-4 bg-light rounded-3 mb-4">
          <h3 class="fs-5 fw-bold mb-4">Filters</h3>
          
          <!-- Category Filter -->
          <div class="mb-4">
            <h4 class="fs-6 fw-semibold mb-3">Categories</h4>
            <div class="form-check mb-2" data-category="all">
              <input class="form-check-input" type="checkbox" value="all" id="allCategories" checked>
              <label class="form-check-label" for="allCategories">
                All Categories
              </label>
            </div>
            <% if (categories && categories.length > 0) { %>
              <% categories.forEach(category => { %>
                <div class="form-check mb-2" data-category="<%= category._id %>">
                  <input class="form-check-input category-checkbox" type="checkbox" value="<%= category._id %>" id="cat_<%= category._id %>">
                  <label class="form-check-label" for="cat_<%= category._id %>">
                    <%= category.name %>
                  </label>
                </div>
              <% }) %>
            <% } %>
          </div>
          
          <!-- Price Range Filter -->
          <div class="mb-4">
            <h4 class="fs-6 fw-semibold mb-3">Price Range</h4>
            <div class="range-slider">
              <input type="range" class="form-range custom-range" min="0" max="5000" id="priceRange" value="5000">
              <div class="d-flex justify-content-between mt-2">
                <span class="small text-muted" id="minPrice">₹0</span>
                <span class="small text-muted" id="maxPrice">₹5000</span>
              </div>
            </div>
            <div class="price-inputs d-flex gap-2 mt-3">
              <div class="input-group input-group-sm">
                <span class="input-group-text">₹</span>
                <input type="number" class="form-control" id="minPriceInput" placeholder="Min" aria-label="Minimum price" min="0" max="5000" value="0">
              </div>
              <div class="input-group input-group-sm">
                <span class="input-group-text">₹</span>
                <input type="number" class="form-control" id="maxPriceInput" placeholder="Max" aria-label="Maximum price" min="0" max="5000" value="5000">
              </div>
            </div>
          </div>
          
          <!-- Apply Filters Button -->
          <button class="btn btn-dark w-100" onclick="applyFilters()">Apply Filters</button>
        </div>
      </div>
      
      <!-- Products Grid -->
      <div class="col-lg-9">
        <!-- Sort and View Options -->
        <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
          <div class="d-flex align-items-center mb-3 mb-md-0">
            <span class="me-2 text-muted">Sort by:</span>
            <select class="form-select form-select-sm" id="sortSelect" onchange="sortProducts()" style="width: auto;">
              <option value="recommended" selected>Recommended</option>
              <option value="price-asc">Price: low to high</option>
              <option value="price-desc">Price: high to low</option>
              <option value="date-desc">New arrivals</option>
              <option value="stock-desc">Best selling</option>
            </select>
          </div>
          <div class="d-flex align-items-center">
            <span class="me-2 text-muted d-none d-sm-block">View:</span>
            <div class="btn-group" role="group" aria-label="View options">
              <button type="button" class="btn btn-outline-secondary btn-sm active">
                <i class="ri-grid-line"></i>
              </button>
              <button type="button" class="btn btn-outline-secondary btn-sm">
                <i class="ri-list-check"></i>
              </button>
            </div>
          </div>
        </div>
        
        <!-- Products -->
        <div class="row g-4" id="productGrid">
          <% if (products && products.length > 0) { %>
            <% products.forEach(product => { %>
              <div class="col-sm-6 col-md-4 product-item" 
                   data-category="<%= product.category._id %>" 
                   data-price="<%= product.salePrice %>" 
                   data-date="<%= new Date(product.createdAt).getTime() %>" 
                   data-stock="<%= product.stock %>">
                <div class="product-card bg-white h-100">
                  <div class="product-image-container">
                    <% 
                      // Determine if the product is "new" (e.g., added within the last 30 days)
                      const now = new Date();
                      const createdAt = new Date(product.createdAt);
                      const diffDays = (now - createdAt) / (1000 * 60 * 60 * 24);
                      const isNew = diffDays <= 30;
                    %>
                    <% if (isNew) { %>
                      <span class="product-tag">New</span>
                    <% } %>
                    <a href="/products/<%= product._id %>" class="text-decoration-none">
                      <img src="<%= product.mainImage || '/api/placeholder/500/600' %>" alt="<%= product.title %>" class="product-image" />
                    </a>
                    <div class="product-actions">
                      <button class="action-btn" title="Quick view">
                        <i class="ri-eye-line"></i>
                      </button>
                      <button class="action-btn" title="Add to wishlist">
                        <i class="ri-heart-line"></i>
                      </button>
                      <button class="action-btn" title="Add to cart">
                        <i class="ri-shopping-cart-line"></i>
                      </button>
                    </div>
                  </div>
                  <div class="p-3">
                    <h3 class="fs-5 fw-semibold mb-1">
                      <a href="/products/<%= product._id %>" class="text-dark text-decoration-none"><%= product.title %></a>
                    </h3>
                    <p class="text-muted small mb-2"><%= product.author %></p>
                    <div class="d-flex justify-content-between align-items-center">
                      <span class="fw-bold">₹<%= product.salePrice %></span>
                      <button class="add-to-cart border-0">
                        <i class="ri-shopping-cart-line"></i>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="col-12 text-center">
              <p class="text-muted">No products available at the moment.</p>
            </div>
          <% } %>
        </div>
        
        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-5">
          <nav aria-label="Page navigation">
            <ul class="pagination" id="pagination">
              <!-- Pagination will be populated dynamically -->
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</section>

<%- include("../partials/user/footer") %>

<style>
  /* [Existing styles remain unchanged] */
  .product-actions {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(255, 255, 255, 0.9);
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.3s ease;
  }
  
  .product-card:hover .product-actions {
    opacity: 1;
    transform: translateY(0);
  }
  
  .action-btn {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    border: none;
    background-color: #fff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
  }
  
  .action-btn:hover {
    background-color: #000;
    color: #fff;
  }
  
  .page-link {
    color: #000;
    border-radius: 0.25rem;
    margin: 0 0.2rem;
  }
  
  .page-item.active .page-link {
    background-color: #000;
    border-color: #000;
  }
  
  .filters-container {
    position: sticky;
    top: 90px;
  }
  
  @media (max-width: 991.98px) {
    .filters-container {
      position: relative;
      top: 0;
    }
  }
  
  .add-to-cart {
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    background-color: #000;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }
  
  .add-to-cart:hover {
    background-color: #333;
  }
  
  .custom-range {
    -webkit-appearance: none;
    width: 100%;
    height: 6px;
    border-radius: 5px;  
    background: #d3d3d3;
    outline: none;
  }
  
  .custom-range::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 18px;
    height: 18px;
    border-radius: 50%; 
    background: #000;
    cursor: pointer;
  }
  
  .custom-range::-moz-range-thumb {
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: #000;
    cursor: pointer;
    border: none;
  }
  
 scad .custom-range::-webkit-slider-runnable-track {
    width: 100%;
    height: 6px;
    cursor: pointer;
    background: #d3d3d3;
    border-radius: 5px;
  }
  
  .custom-range::-moz-range-track {
    width: 100%;
    height: 6px;
    cursor: pointer;
    background: #d3d3d3;
    border-radius: 5px;
  }
  
  .custom-range:focus::-webkit-slider-runnable-track {
    background: #d3d3d3;
  }
  
  .form-check-input:checked {
    background-color: #000;
    border-color: #000;
  }
  
  @media (max-width: 767.98px) {
    .product-actions {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .product-image-container {
    position: relative;
    overflow: hidden;
  }
  
  .product-image {
    width: 100%;
    height: auto;
    aspect-ratio: 1/1.2;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .product-card:hover .product-image {
    transform: scale(1.05);
  }
  
  .product-tag {
    position: absolute;
    top: 10px;
    left: 10px;
    background-color: #000;
    color: #fff;
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
    font-weight: 600;
    border-radius: 2px;
    z-index: 1;
  }
</style>

<script>
  // Initialize price range
  document.getElementById('priceRange').addEventListener('input', function() {
    const max = parseInt(this.max);
    const value = parseInt(this.value);
    document.getElementById('maxPrice').textContent = `₹${value}`;
    document.getElementById('maxPriceInput').value = value;
    document.getElementById('minPriceInput').max = value;
  });

  document.getElementById('minPriceInput').addEventListener('input', function() {
    const min = parseInt(this.value);
    const max = parseInt(document.getElementById('maxPriceInput').value);
    if (min > max) document.getElementById('maxPriceInput').value = min;
    document.getElementById('priceRange').value = max;
    document.getElementById('minPrice').textContent = `₹${min}`;
  });

  document.getElementById('maxPriceInput').addEventListener('input', function() {
    const max = parseInt(this.value);
    const min = parseInt(document.getElementById('minPriceInput').value);
    if (max < min) document.getElementById('minPriceInput').value = max;
    document.getElementById('priceRange').value = max;
    document.getElementById('maxPrice').textContent = `₹${max}`;
  });

  // Filter and Sort Functions
  function applyFilters() {
    const selectedCategories = Array.from(document.querySelectorAll('.category-checkbox:checked'))
      .map(cb => cb.value)
      .filter(value => value !== 'all');
    const minPrice = parseInt(document.getElementById('minPriceInput').value) || 0;
    const maxPrice = parseInt(document.getElementById('maxPriceInput').value) || 5000;
    const items = document.getElementsByClassName('product-item');

    for (let item of items) {
      const itemCategory = item.getAttribute('data-category');
      const itemPrice = parseInt(item.getAttribute('data-price'));
      const matchesCategory = selectedCategories.length === 0 || selectedCategories.includes(itemCategory);
      const matchesPrice = itemPrice >= minPrice && itemPrice <= maxPrice;
      item.style.display = matchesCategory && matchesPrice ? 'block' : 'none';
    }
  }

  function sortProducts() {
    const sortValue = document.getElementById('sortSelect').value;
    const items = Array.from(document.getElementsByClassName('product-item'));
    items.sort((a, b) => {
      switch (sortValue) {
        case 'price-asc': return parseInt(a.getAttribute('data-price')) - parseInt(b.getAttribute('data-price'));
        case 'price-desc': return parseInt(b.getAttribute('data-price')) - parseInt(a.getAttribute('data-price'));
        case 'date-desc': return parseInt(b.getAttribute('data-date')) - parseInt(a.getAttribute('data-date'));
        case 'stock-desc': return parseInt(b.getAttribute('data-stock')) - parseInt(a.getAttribute('data-stock'));
        case 'recommended':
        default: return 0; // No sorting for recommended
      }
    });
    const productGrid = document.getElementById('productGrid');
    items.forEach(item => productGrid.appendChild(item));
  }

  // Initial load
  document.addEventListener('DOMContentLoaded', () => {
    sortProducts(); // Apply initial sort
    applyFilters(); // Apply initial filters
  });
</script>