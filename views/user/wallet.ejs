<%- include("../partials/user/header") %>

<div class="container py-5">
  <!-- Breadcrumbs -->
  <nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Home</a></li>
      <li class="breadcrumb-item"><a href="/user/dashboard">My Account</a></li>
      <li class="breadcrumb-item active" aria-current="page">Wallet</li>
    </ol>
  </nav>

  <div class="row g-4">
    <%- include("../partials/user/accountSidebar") %>

    <!-- Main Content -->
    <div class="col-lg-9">
      <!-- Wallet Balance Card with Animation -->
      <div class="card border-0 shadow-sm mb-4 wallet-card">
        <div class="card-header bg-white p-4 border-0">
          <div class="d-flex align-items-center">
            <div class="wallet-icon me-3">
              <i class="bi bi-wallet2"></i>
            </div>
            <h4 class="mb-0">My Wallet</h4>
          </div>
        </div>
        <div class="card-body p-4">
          <div class="text-center py-4">
            <div class="wallet-animation-container mb-4">
              <div class="wallet-visual">
                <div class="wallet-body">
                  <div class="wallet-fold"></div>
                  <div class="wallet-bills">
                    <div class="bill bill-1"></div>
                    <div class="bill bill-2"></div>
                    <div class="bill bill-3"></div>
                  </div>
                  <div class="wallet-coins">
                    <div class="coin coin-1"></div>
                    <div class="coin coin-2"></div>
                  </div>
                </div>
              </div>
            </div>
            <div class="mb-3">
              <span class="display-6 fw-bold balance-amount" data-balance="1250">₹0.00</span>
            </div>
            <div class="d-flex justify-content-center gap-3 mt-3">
              <button type="button" class="btn btn-dark px-4 py-2 add-money-btn" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
                <i class="bi bi-plus-circle me-2"></i>Add Money
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Transaction History Card -->
      <div class="card border-0 shadow-sm transaction-card">
        <div class="card-header bg-white p-4 border-0 d-flex justify-content-between align-items-center">
          <h4 class="mb-0">Transaction History</h4>
          <div class="dropdown">
            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
              <i class="bi bi-funnel me-1"></i>Filter
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="filterDropdown">
              <li><a class="dropdown-item" href="#"><i class="bi bi-arrow-up me-2"></i>Credits</a></li>
              <li><a class="dropdown-item" href="#"><i class="bi bi-arrow-down me-2"></i>Debits</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="#"><i class="bi bi-filter-circle me-2"></i>All Transactions</a></li>
            </ul>
          </div>
        </div>
        <div class="card-body p-0">
          <div class="table-responsive">
            <table class="table table-hover mb-0">
              <thead class="table-light">
                <tr>
                  <th scope="col" class="ps-4">Date</th>
                  <th scope="col">Transaction ID</th>
                  <th scope="col">Description</th>
                  <th scope="col">Type</th>
                  <th scope="col" class="text-end pe-4">Amount</th>
                </tr>
              </thead>
              <tbody>
                <!-- Credit Transaction -->
                <tr class="transaction-row">
                  <td class="ps-4">12 May 2025</td>
                  <td><span class="small text-muted">TXN82739452</span></td>
                  <td>Wallet Topup</td>
                  <td><span class="badge bg-success-subtle text-success">Credit</span></td>
                  <td class="text-end pe-4 fw-medium text-success transaction-amount">+₹500.00</td>
                </tr>
                
                <!-- Debit Transaction -->
                <tr class="transaction-row">
                  <td class="ps-4">10 May 2025</td>
                  <td><span class="small text-muted">TXN82736290</span></td>
                  <td>Order #ORD29845</td>
                  <td><span class="badge bg-danger-subtle text-danger">Debit</span></td>
                  <td class="text-end pe-4 fw-medium text-danger transaction-amount">-₹250.00</td>
                </tr>
                
                <!-- Refund Transaction -->
                <tr class="transaction-row">
                  <td class="ps-4">28 Apr 2025</td>
                  <td><span class="small text-muted">TXN82701245</span></td>
                  <td>Refund for Order #ORD28712</td>
                  <td><span class="badge bg-success-subtle text-success">Credit</span></td>
                  <td class="text-end pe-4 fw-medium text-success transaction-amount">+₹350.00</td>
                </tr>
                
                <!-- Debit Transaction -->
                <tr class="transaction-row">
                  <td class="ps-4">15 Apr 2025</td>
                  <td><span class="small text-muted">TXN82698431</span></td>
                  <td>Order #ORD28712</td>
                  <td><span class="badge bg-danger-subtle text-danger">Debit</span></td>
                  <td class="text-end pe-4 fw-medium text-danger transaction-amount">-₹350.00</td>
                </tr>
                
                <!-- Credit Transaction -->
                <tr class="transaction-row">
                  <td class="ps-4">05 Apr 2025</td>
                  <td><span class="small text-muted">TXN82695123</span></td>
                  <td>Wallet Topup</td>
                  <td><span class="badge bg-success-subtle text-success">Credit</span></td>
                  <td class="text-end pe-4 fw-medium text-success transaction-amount">+₹1,000.00</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
        <div class="card-footer bg-white text-center p-3">
          <button type="button" class="btn btn-outline-dark btn-sm">
            <i class="bi bi-arrow-down me-1"></i>Load More
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add Money Modal -->
<div class="modal fade" id="addMoneyModal" tabindex="-1" aria-labelledby="addMoneyModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header border-0">
        <h5 class="modal-title" id="addMoneyModalLabel">Add Money to Wallet</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p class="text-muted small mb-3">Choose an amount or enter a custom amount to add money to your wallet</p>
        <form id="addMoneyForm">
          <div class="mb-4">
            <label class="form-label">Quick Select Amount</label>
            <div class="d-flex flex-wrap gap-2">
              <input type="radio" class="btn-check" name="quickAmount" id="amount100" autocomplete="off" value="100">
              <label class="btn btn-outline-dark" for="amount100">₹100</label>

              <input type="radio" class="btn-check" name="quickAmount" id="amount200" autocomplete="off" value="200">
              <label class="btn btn-outline-dark" for="amount200">₹200</label>

              <input type="radio" class="btn-check" name="quickAmount" id="amount500" autocomplete="off" value="500">
              <label class="btn btn-outline-dark" for="amount500">₹500</label>

              <input type="radio" class="btn-check" name="quickAmount" id="amount1000" autocomplete="off" value="1000">
              <label class="btn btn-outline-dark" for="amount1000">₹1000</label>
            </div>
          </div>

          <div class="mb-3">
            <label for="customAmount" class="form-label">Custom Amount</label>
            <div class="input-group">
              <span class="input-group-text bg-light border-end-0">₹</span>
              <input type="number" min="1" class="form-control border-start-0" id="customAmount" name="customAmount" placeholder="Enter amount" />
            </div>
            <div id="amountError" class="text-danger small mt-1"></div>
          </div>

          <div class="mb-3">
            <label class="form-label">Payment Method</label>
            <div class="form-check mb-2">
              <input class="form-check-input" type="radio" name="paymentMethod" id="upi" checked>
              <label class="form-check-label" for="upi">
                <i class="bi bi-credit-card me-2"></i>UPI
              </label>
            </div>
            <div class="form-check mb-2">
              <input class="form-check-input" type="radio" name="paymentMethod" id="creditCard">
              <label class="form-check-label" for="creditCard">
                <i class="bi bi-credit-card-2-front me-2"></i>Credit/Debit Card
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="paymentMethod" id="netBanking">
              <label class="form-check-label" for="netBanking">
                <i class="bi bi-bank me-2"></i>Net Banking
              </label>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer border-0">
        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" form="addMoneyForm" class="btn btn-dark" id="addMoneyBtn">
          <i class="bi bi-wallet2 me-2"></i>Proceed to Pay
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Add Bootstrap Icons CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css"/>
<!-- Add SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
  /* Custom styling */
  .primary-bg {
    background-color: #f0f0f0;
    color: #1a1a1a;
    font-weight: 500;
  }

  .primary-bg:hover {
    background-color: #e5e5e5;
    color: #000;
  }

  .breadcrumb-item + .breadcrumb-item::before {
    content: "›";
    font-weight: bold;
  }

  .breadcrumb a {
    color: #333;
    text-decoration: none;
  }

  .breadcrumb a:hover {
    color: #000;
    text-decoration: underline;
  }

  @media (max-width: 991px) {
    .profile-sidebar {
      margin-bottom: 2rem;
    }
  }

  /* Card styling with animations */
  .card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border-radius: 12px;
  }

  .wallet-card {
    animation: slideInUp 0.6s ease-out;
  }

  .transaction-card {
    animation: slideInUp 0.8s ease-out;
  }

  .card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
  }

  .card-header {
    border-radius: 12px 12px 0 0 !important;
  }

  /* Wallet Icon Animation */
  .wallet-icon {
    width: 40px;
    height: 40px;
    background: linear-gradient(135deg, #343a40, #495057);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.2rem;
    animation: pulse 2s infinite;
  }

  /* Wallet Visual Animation */
  .wallet-animation-container {
    perspective: 1000px;
  }

  .wallet-visual {
    width: 120px;
    height: 80px;
    margin: 0 auto;
    position: relative;
    transform-style: preserve-3d;
    animation: floatWallet 3s ease-in-out infinite;
  }

  .wallet-body {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #2c3e50, #34495e);
    border-radius: 8px;
    position: relative;
    box-shadow: 0 10px 20px rgba(0,0,0,0.2);
    overflow: hidden;
  }

  .wallet-fold {
    position: absolute;
    top: 0;
    right: 0;
    width: 30px;
    height: 100%;
    background: linear-gradient(135deg, #34495e, #2c3e50);
    border-radius: 0 8px 8px 0;
    transform: rotateY(-10deg);
    transform-origin: left center;
  }

  .wallet-bills {
    position: absolute;
    top: 15px;
    left: 15px;
    right: 35px;
  }

  .bill {
    width: 100%;
    height: 8px;
    border-radius: 2px;
    margin-bottom: 3px;
    animation: shimmer 2s infinite;
  }

  .bill-1 {
    background: linear-gradient(90deg, #27ae60, #2ecc71);
    animation-delay: 0s;
  }

  .bill-2 {
    background: linear-gradient(90deg, #3498db, #5dade2);
    animation-delay: 0.3s;
    width: 80%;
  }

  .bill-3 {
    background: linear-gradient(90deg, #e74c3c, #ec7063);
    animation-delay: 0.6s;
    width: 60%;
  }

  .wallet-coins {
    position: absolute;
    bottom: 10px;
    right: 10px;
  }

  .coin {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    position: absolute;
    animation: coinSpin 2s linear infinite;
  }

  .coin-1 {
    background: radial-gradient(circle, #f1c40f, #f39c12);
    bottom: 0;
    right: 0;
  }

  .coin-2 {
    background: radial-gradient(circle, #e67e22, #d35400);
    bottom: 5px;
    right: 8px;
    animation-delay: 1s;
  }

  /* Balance Amount Animation */
  .balance-amount {
    background: linear-gradient(45deg, #2c3e50, #3498db, #2c3e50);
    background-size: 200% 200%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradientShift 3s ease-in-out infinite;
  }

  /* Button Animations */
  .add-money-btn {
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .add-money-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0,0,0,0.2);
  }

  .add-money-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: left 0.5s;
  }

  .add-money-btn:hover::before {
    left: 100%;
  }

  /* Transaction Row Animations */
  .transaction-row {
    animation: slideInLeft 0.5s ease-out;
    transition: all 0.3s ease;
  }

  .transaction-row:nth-child(odd) {
    animation-delay: 0.1s;
  }

  .transaction-row:nth-child(even) {
    animation-delay: 0.2s;
  }

  .transaction-row:hover {
    background-color: rgba(0, 0, 0, 0.05) !important;
    transform: translateX(5px);
  }

  .transaction-amount {
    transition: all 0.3s ease;
  }

  .transaction-row:hover .transaction-amount {
    font-weight: 600 !important;
    font-size: 1.05em;
  }

  /* Validation styling */
  .is-valid {
    border-color: #198754 !important;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right calc(0.375em + 0.1875rem) center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    padding-right: calc(1.5em + 0.75rem) !important;
  }

  .is-invalid {
    border-color: #dc3545 !important;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right calc(0.375em + 0.1875rem) center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    padding-right: calc(1.5em + 0.75rem) !important;
  }

  /* Badge styling */
  .badge {
    font-weight: 500;
    padding: 0.35em 0.65em;
    transition: all 0.3s ease;
  }

  .bg-success-subtle {
    background-color: rgba(25, 135, 84, 0.1);
  }

  .bg-danger-subtle {
    background-color: rgba(220, 53, 69, 0.1);
  }

  /* Keyframe Animations */
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }

  @keyframes floatWallet {
    0%, 100% {
      transform: translateY(0px) rotateX(5deg);
    }
    50% {
      transform: translateY(-10px) rotateX(-5deg);
    }
  }

  @keyframes shimmer {
    0%, 100% {
      opacity: 0.8;
    }
    50% {
      opacity: 1;
      box-shadow: 0 0 10px currentColor;
    }
  }

  @keyframes coinSpin {
    0% {
      transform: rotateY(0deg);
    }
    100% {
      transform: rotateY(360deg);
    }
  }

  @keyframes gradientShift {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  @keyframes countUp {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  /* Loading animation for balance */
  .balance-loading {
    animation: countUp 2s ease-out;
  }
</style>

<script>
// Toast configuration
const Toast = Swal.mixin({
  toast: true,
  position: "bottom-end",
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.addEventListener("mouseenter", Swal.stopTimer);
    toast.addEventListener("mouseleave", Swal.resumeTimer);
  },
});

// Validation helper functions
function setInvalid(element, errorElement, message) {
  element.classList.add("is-invalid");
  element.classList.remove("is-valid");
  errorElement.textContent = message;
}

function setValid(element, errorElement) {
  element.classList.add("is-valid");
  element.classList.remove("is-invalid");
  errorElement.textContent = "";
}

function clearValidation(element, errorElement) {
  element.classList.remove("is-invalid", "is-valid");
  errorElement.textContent = "";
}

// Animated balance counter
function animateBalance() {
  const balanceElement = document.querySelector('.balance-amount');
  const targetBalance = parseInt(balanceElement.dataset.balance);
  let currentBalance = 0;
  const increment = targetBalance / 50;
  const timer = setInterval(() => {
    currentBalance += increment;
    if (currentBalance >= targetBalance) {
      currentBalance = targetBalance;
      clearInterval(timer);
    }
    balanceElement.textContent = `₹${currentBalance.toFixed(2)}`;
  }, 40);
  
  balanceElement.classList.add('balance-loading');
}

// Initialize animations on page load
document.addEventListener('DOMContentLoaded', function() {
  // Animate balance counter
  setTimeout(animateBalance, 500);
  
  // Animate transaction rows
  const transactionRows = document.querySelectorAll('.transaction-row');
  transactionRows.forEach((row, index) => {
    row.style.animationDelay = `${index * 0.1}s`;
  });
});

// Quick amount selection
const quickAmountInputs = document.querySelectorAll('input[name="quickAmount"]');
const customAmountInput = document.getElementById('customAmount');

quickAmountInputs.forEach(input => {
  input.addEventListener('change', function() {
    if (this.checked) {
      customAmountInput.value = this.value;
    }
  });
});

customAmountInput.addEventListener('input', function() {
  // Uncheck any selected quick amount
  quickAmountInputs.forEach(input => {
    input.checked = false;
  });
});

// Add Money Form Validation
const addMoneyForm = document.getElementById('addMoneyForm');
const addMoneyBtn = document.getElementById('addMoneyBtn');
const amountError = document.getElementById('amountError');

addMoneyForm.addEventListener('submit', function(event) {
  event.preventDefault();
  
  const amount = customAmountInput.value.trim();
  let isValid = true;
  
  if (!amount || parseFloat(amount) <= 0) {
    setInvalid(customAmountInput, amountError, 'Please enter a valid amount');
    isValid = false;
  } else if (parseFloat(amount) > 10000) {
    setInvalid(customAmountInput, amountError, 'Maximum amount per transaction is ₹10,000');
    isValid = false;
  } else {
    setValid(customAmountInput, amountError);
  }
  
  if (!isValid) return;
  
  // Show processing UI
  const originalBtnText = addMoneyBtn.innerHTML;
  addMoneyBtn.disabled = true;
  addMoneyBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
  
  // Simulate API call
  setTimeout(() => {
    // Close modal
    bootstrap.Modal.getInstance(document.getElementById('addMoneyModal')).hide();
    
    // Reset form
    addMoneyForm.reset();
    customAmountInput.value = '';
    clearValidation(customAmountInput, amountError);
    
    // Reset button
    addMoneyBtn.disabled = false;
    addMoneyBtn.innerHTML = originalBtnText;
    
    // Show success message with wallet animation trigger
    Toast.fire({
      icon: 'success',
      title: `₹${amount} added to your wallet successfully`
    });
    
    // Trigger wallet animation
    const walletVisual = document.querySelector('.wallet-visual');
    walletVisual.style.animation = 'none';
    setTimeout(() => {
      walletVisual.style.animation = 'floatWallet 3s ease-in-out infinite';
    }, 100);
    
  }, 1500);
});
</script>

<%- include("../partials/user/footer") %>