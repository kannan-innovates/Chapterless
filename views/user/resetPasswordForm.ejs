<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles/user/resetPassword.css">
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6">
                <div class="form-container">
                    <div class="header">
                        <h3>Reset Password</h3>
                        <p>Enter your new password below</p>
                    </div>
                    
                    <div class="server-error" id="serverError"></div>
                    
                    <form id="resetPasswordForm" novalidate>
                        <div class="form-floating">
                            <input type="password" class="form-control" id="newPassword" name="newPassword" placeholder="New Password" required>
                            <label for="newPassword">New Password</label>
                        </div>
                        <div class="password-requirements" id="passwordRequirements">
                            Password must be at least 6 characters long and include a mix of letters and numbers
                        </div>
                        <div class="error-message" id="passwordError">
                            Please enter a valid password (at least 6 characters with letters and numbers)
                        </div>
                        
                        <div class="form-floating">
                            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirm Password" required>
                            <label for="confirmPassword">Confirm Password</label>
                        </div>
                        <div class="error-message" id="passwordMatchError">
                            Passwords do not match
                        </div>
                        <div class="error-message" id="emptyFieldError">
                            Please fill in all fields
                        </div>
                        
                        <button type="submit" class="btn btn-dark btn-lg" id="submitButton">Confirm Reset</button>
                    </form>
                    
                    <div class="back-link">
                        <a href="/login">Back to Login</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Add validation styling
        function setInvalid(element) {
            element.classList.add('is-invalid');
            element.classList.remove('is-valid');
        }
        
        function setValid(element) {
            element.classList.add('is-valid');
            element.classList.remove('is-invalid');
        }
        
        // Password validation
        function validatePassword(password) {
            // At least 6 characters with letters and numbers
            const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{6,}$/;
            return passwordRegex.test(password);
        }
        
        // Display server error
        function showServerError(message) {
            const serverError = document.getElementById('serverError');
            serverError.textContent = message;
            serverError.style.display = 'block';
            
            // Auto hide after 5 seconds
            setTimeout(() => {
                serverError.style.display = 'none';
            }, 5000);
        }
        
        // New Password validation in real-time
        document.getElementById('newPassword').addEventListener('input', function() {
            const newPassword = this.value.trim();
            const passwordError = document.getElementById('passwordError');
            
            if (newPassword === '') {
                passwordError.style.display = 'none';
                this.classList.remove('is-invalid');
                this.classList.remove('is-valid');
            } else if (!validatePassword(newPassword)) {
                passwordError.style.display = 'block';
                setInvalid(this);
            } else {
                passwordError.style.display = 'none';
                setValid(this);
            }
            
            // Check match if confirm password has a value
            const confirmPassword = document.getElementById('confirmPassword').value.trim();
            const passwordMatchError = document.getElementById('passwordMatchError');
            
            if (confirmPassword) {
                if (newPassword !== confirmPassword) {
                    passwordMatchError.style.display = 'block';
                    setInvalid(document.getElementById('confirmPassword'));
                } else {
                    passwordMatchError.style.display = 'none';
                    setValid(document.getElementById('confirmPassword'));
                }
            }
        });
    
        // Real-time password match validation
        document.getElementById('confirmPassword').addEventListener('input', function() {
            const newPassword = document.getElementById('newPassword').value.trim();
            const confirmPassword = this.value.trim();
            const passwordMatchError = document.getElementById('passwordMatchError');
    
            if (confirmPassword === '') {
                passwordMatchError.style.display = 'none';
                this.classList.remove('is-invalid');
                this.classList.remove('is-valid');
            } else if (newPassword !== confirmPassword) {
                passwordMatchError.style.display = 'block';
                setInvalid(this);
            } else {
                passwordMatchError.style.display = 'none';
                setValid(this);
            }
        });
        
        // Form submission with inline validation
        document.getElementById('resetPasswordForm').addEventListener('submit', function(event) {
            event.preventDefault();
    
            const newPassword = document.getElementById('newPassword').value.trim();
            const confirmPassword = document.getElementById('confirmPassword').value.trim();
            const passwordMatchError = document.getElementById('passwordMatchError');
            const passwordError = document.getElementById('passwordError');
            const emptyFieldError = document.getElementById('emptyFieldError');
            const submitButton = document.getElementById('submitButton');
            
            let isValid = true;
    
            // Check for empty fields
            if (!newPassword || !confirmPassword) {
                emptyFieldError.style.display = 'block';
                isValid = false;
                
                if (!newPassword) {
                    setInvalid(document.getElementById('newPassword'));
                }
                if (!confirmPassword) {
                    setInvalid(document.getElementById('confirmPassword'));
                }
            } else {
                emptyFieldError.style.display = 'none';
            }
            
            // Validate password format
            if (newPassword && !validatePassword(newPassword)) {
                passwordError.style.display = 'block';
                setInvalid(document.getElementById('newPassword'));
                isValid = false;
            }
    
            // Check if passwords match
            if (newPassword && confirmPassword && newPassword !== confirmPassword) {
                passwordMatchError.style.display = 'block';
                setInvalid(document.getElementById('confirmPassword'));
                isValid = false;
            }
            
            if (!isValid) {
                return;
            }
    
            // Show loading state
            submitButton.disabled = true;
            submitButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
            
            // If validation passes, send the form data
            fetch('/resetPassword', {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    newPassword: newPassword,
                    confirmPassword: confirmPassword
                }),
            })
            .then(response => response.json())
            .then(data => {
                submitButton.disabled = false;
                submitButton.textContent = 'Confirm Reset';
                
                if (data.success) {
                    window.location.href = '/login?reset=success';
                } else {
                    // Show inline error message instead of alert
                    showServerError(data.message || 'Password reset failed. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                submitButton.disabled = false;
                submitButton.textContent = 'Confirm Reset';
                
                // Show inline error message instead of alert
                showServerError('An error occurred. Please try again later.');
            });
        });
    </script>
</body>
</html>