<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Products - Chapterless Admin</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.css"
    />
    <link rel="stylesheet" href="/styles/admin/getproducts.css" />
    <link rel="stylesheet" href="/styles/admin/responsive.css" />
  </head>
  <body>
    <div class="container">
      <%- include('../partials/admin/sidebar') %>

      <div class="main-content">
        <div class="header">
          <div>
            <h1
              style="
                font-size: 42px;
                font-weight: 700;
                color: #1f2937;
                margin-bottom: 8px;
                line-height: 1.2;
              "
            >
              Product Management
            </h1>
            <p
              style="
                font-size: 20px;
                color: #6b7280;
                font-weight: 400;
                margin-top: 0;
              "
            >
              Add, edit and manage your book inventory
            </p>
          </div>
          <a href="/admin/add-product" class="btn-add">
            <i class="fas fa-plus"></i>
            Add New Product
          </a>
        </div>

        <div class="search-container">
          <input
            type="text"
            class="search-input"
            placeholder="Search products, authors, categories..."
            value="<%= search %>"
          />
          <i class="fas fa-search search-icon"></i>
          <% if (search && search.length > 0) { %>
          <button class="clear-search-btn" type="button" title="Clear search">
            <i class="fas fa-times"></i>
          </button>
          <% } %>
        </div>

        <div class="filters">
          <div class="filter-group">
            <label class="filter-label">Category</label>
            <select class="filter-select" id="categoryFilter">
              <option value="">All Categories</option>
              <% categories.forEach(category => { %>
              <option
                value="<%= category._id %>"
                <%= categoryFilter === category._id.toString() ? 'selected' : '' %>
              >
                <%= category.name %>
              </option>
              <% }) %>
            </select>
          </div>

          <div class="filter-group">
            <label class="filter-label">Sort By</label>
            <select class="filter-select" id="sortBy">
              <option value="newest" <%= sortBy === 'newest' ? 'selected' : '' %>>Newest First</option>
              <option value="oldest" <%= sortBy === 'oldest' ? 'selected' : '' %>>Oldest First</option>
              <option value="price-low" <%= sortBy === 'price-low' ? 'selected' : '' %>>Price Low to High</option>
              <option value="price-high" <%= sortBy === 'price-high' ? 'selected' : '' %>>Price High to Low</option>
              <option value="stock-high" <%= sortBy === 'stock-high' ? 'selected' : '' %>>Stock High to Low</option>
            </select>
          </div>
        </div>

        <div class="table-container">
          <table>
            <thead>
              <tr>
                <th class="d-none-mobile">ID</th>
                <th>Image</th>
                <th>Product</th>
                <th class="d-none-mobile">Author</th>
                <th class="d-none-mobile">Category</th>
                <th>Price</th>
                <th class="d-none-mobile">Regular</th>
                <th class="d-none-mobile">Stock</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% if (products && products.length > 0) { %>
              <% products.forEach((product, index) => { %>
              <tr>
                <td class="d-none-mobile"><%= (currentPage - 1) * limit + index + 1 %></td>
                <td>
                  <img
                    src="<%= product.mainImage %>"
                    alt="<%= product.title %>"
                    class="product-image"
                  />
                </td>
                <td>
                  <div class="fw-semibold"><%= product.title %></div>
                  <div class="small text-muted d-md-none">
                    <%= product.author %> | <%= product.category ? product.category.name : 'N/A' %>
                  </div>
                  <div class="small text-muted d-md-none">
                    Stock: <%= product.stock %> | Reg: ₹<%= product.regularPrice.toFixed(2) %>
                  </div>
                </td>
                <td class="d-none-mobile"><%= product.author %></td>
                <td class="d-none-mobile"><%= product.category ? product.category.name : 'N/A' %></td>
                <td>₹<%= product.salePrice.toFixed(2) %></td>
                <td class="d-none-mobile">₹<%= product.regularPrice.toFixed(2) %></td>
                <td class="d-none-mobile"><%= product.stock %></td>
                <td>
                  <label class="toggle-switch">
                    <input
                      type="checkbox"
                      <%= product.isListed ? 'checked' : '' %>
                      data-product-id="<%= product._id %>"
                      class="toggle-status"
                    />
                    <span class="toggle-slider"></span>
                  </label>
                </td>
                <td>
                  <div class="actions">
                    <button class="btn-action btn-edit btn-sm" data-id="<%= product._id %>" title="Edit">
                      <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn-action btn-delete btn-sm" data-id="<%= product._id %>" title="Delete">
                      <i class="fas fa-trash"></i>
                    </button>
                  </div>
                </td>
              </tr>
              <% }) %>
              <% } else { %>
              <tr>
                <td colspan="10" class="text-center">No products found</td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <div class="pagination-info">
          <p>
            Showing <%= products.length %> of <%= totalProducts %> products
            (Page <%= currentPage %> of <%= totalPages %>)
          </p>
          <% if (totalPages > 0) { %>
          <div class="pagination">
            <a
              href="?page=<%= Math.max(1, currentPage - 1) %>&search=<%= encodeURIComponent(search) %>&category=<%= categoryFilter %>&sort=<%= sortBy %>"
              class="page-btn prev-btn <%= currentPage === 1 ? 'disabled' : '' %>"
            >
              <i class="fas fa-chevron-left"></i> Previous
            </a>
            <%
              const maxPagesToShow = 5;
              const halfMax = Math.floor(maxPagesToShow / 2);
              let startPage = Math.max(1, currentPage - halfMax);
              let endPage = Math.min(totalPages, currentPage + halfMax);

              if (endPage - startPage + 1 < maxPagesToShow) {
                startPage = Math.max(1, endPage - maxPagesToShow + 1);
              }

              if (startPage > 1) { %>
                <a href="?page=1&search=<%= encodeURIComponent(search) %>&category=<%= categoryFilter %>&sort=<%= sortBy %>" class="page-btn">1</a>
                <% if (startPage > 2) { %>
                  <span class="page-ellipsis">...</span>
                <% } %>
              <% }

              for (let i = startPage; i <= endPage; i++) { %>
                <a
                  href="?page=<%= i %>&search=<%= encodeURIComponent(search) %>&category=<%= categoryFilter %>&sort=<%= sortBy %>"
                  class="page-btn page-number <%= currentPage === i ? 'active' : '' %>"
                >
                  <%= i %>
                </a>
              <% }

              if (endPage < totalPages) { %>
                <% if (endPage < totalPages - 1) { %>
                  <span class="page-ellipsis">...</span>
                <% } %>
                <a href="?page=<%= totalPages %>&search=<%= encodeURIComponent(search) %>&category=<%= categoryFilter %>&sort=<%= sortBy %>" class="page-btn"><%= totalPages %></a>
              <% } %>

            <a
              href="?page=<%= Math.min(totalPages, currentPage + 1) %>&search=<%= encodeURIComponent(search) %>&category=<%= categoryFilter %>&sort=<%= sortBy %>"
              class="page-btn next-btn <%= currentPage === totalPages ? 'disabled' : '' %>"
            >
              Next <i class="fas fa-chevron-right"></i>
            </a>
          </div>
          <% } %>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.all.min.js"></script>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        // Search functionality
        const searchInput = document.querySelector('.search-input');
        searchInput.addEventListener('input', function () {
          const category = document.getElementById('categoryFilter').value;
          const sort = document.getElementById('sortBy').value;
          window.location.href = `/admin/getProducts?search=${encodeURIComponent(this.value)}&category=${category}&sort=${sort}&page=1`;
        });

        // Clear search functionality
        const clearSearchBtn = document.querySelector('.clear-search-btn');
        if (clearSearchBtn) {
          clearSearchBtn.addEventListener('click', function () {
            const category = document.getElementById('categoryFilter').value;
            const sort = document.getElementById('sortBy').value;
            window.location.href = `/admin/getProducts?search=&category=${category}&sort=${sort}&page=1`;
          });
        }

        // Filter and Sort functionality
        document.getElementById('categoryFilter').addEventListener('change', function () {
          const search = document.querySelector('.search-input').value;
          const sort = document.getElementById('sortBy').value;
          window.location.href = `/admin/getProducts?search=${encodeURIComponent(search)}&category=${this.value}&sort=${sort}&page=1`;
        });

        document.getElementById('sortBy').addEventListener('change', function () {
          const search = document.querySelector('.search-input').value;
          const category = document.getElementById('categoryFilter').value;
          window.location.href = `/admin/getProducts?search=${encodeURIComponent(search)}&category=${category}&sort=${this.value}&page=1`;
        });

        // Toggle Product Status
        const toggleSwitches = document.querySelectorAll('.toggle-status');
        toggleSwitches.forEach((toggle) => {
          toggle.addEventListener('change', async function () {
            const productId = this.getAttribute('data-product-id');
            const isListed = this.checked;

            try {
              const response = await fetch(`/admin/products/${productId}/toggle`, {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ isListed }),
              });
              const data = await response.json();

              if (response.ok) {
                Swal.fire({
                  toast: true,
                  position: 'top-end',
                  showConfirmButton: false,
                  timer: 3000,
                  icon: 'success',
                  title: data.message,
                });
              } else {
                this.checked = !isListed; // Revert toggle
                Swal.fire({
                  title: 'Error!',
                  text: data.error || 'Failed to toggle status',
                  icon: 'error',
                });
              }
            } catch (error) {
              this.checked = !isListed; // Revert toggle
              Swal.fire({
                title: 'Error!',
                text: 'Server Error',
                icon: 'error',
              });
            }
          });
        });

        // Edit Product
        document.querySelectorAll('.btn-edit').forEach(button => {
          button.addEventListener('click', function () {
            console.log('Edit button clicked for productId:', this.getAttribute('data-id'));
            const productId = this.getAttribute('data-id');
            window.location.href = `/admin/products/${productId}/edit`;
          });
        });

        // Soft Delete Product
        document.querySelectorAll('.btn-delete').forEach(button => {
          button.addEventListener('click', async function () {
            console.log('Delete button clicked for productId:', this.getAttribute('data-id'));
            const productId = this.getAttribute('data-id');
            const confirmed = await Swal.fire({
              title: 'Are you sure?',
              text: 'This will soft delete the product (it can be restored later).',
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#6f42c1',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Yes, delete it!',
              cancelButtonText: 'Cancel',
            });

            if (confirmed.isConfirmed) {
              try {
                const response = await fetch(`/admin/products/${productId}/soft-delete`, {
                  method: 'PUT',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                });
                const data = await response.json();

                if (response.ok) {
                  Swal.fire({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    icon: 'success',
                    title: data.message,
                  }).then(() => {
                    window.location.reload();
                  });
                } else {
                  Swal.fire({
                    title: 'Error!',
                    text: data.error || 'Failed to delete product',
                    icon: 'error',
                  });
                }
              } catch (error) {
                console.error('Fetch error:', error);
                Swal.fire({
                  title: 'Error!',
                  text: 'Server Error: ' + error.message,
                  icon: 'error',
                });
              }
            }
          });
        });
      });
    </script>
  </body>
</html>